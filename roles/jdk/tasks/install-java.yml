# prints the result and the softwares location
- debug:
    msg: "Softwares Location:{{ files }}"

- name: Make a directory that holds the Java binaries
  file: path=/usr/local/java state=directory

# Copy java tar ball
- copy: src={{ files }}/{{ jdk_download_filename }} dest=/tmp/{{ jdk_download_filename }}

- name: Extract the JDK tar ball
  command: tar -xvzf /tmp/{{ jdk_download_filename }} chdir=/usr/local/java creates=/usr/local/java/{{ jdk_version }}

- name: Update the symbolic link to the JDK install
  file: path=/usr/local/java/jdk src=/usr/local/java/{{ jdk_version }} state=link force=yes

- name: Add the JDK binaries to the system path (/etc/profile)
  lineinfile: "{{ item }}"
  with_items:
    - dest=/etc/profile regexp='^JAVA_HOME=/usr/local/java/jdk' line="JAVA_HOME=/usr/local/java/jdk" state=present
    - dest=/etc/profile regexp='^PATH=.*JAVA_HOME.*' line="PATH=$PATH:$HOME/bin:$JAVA_HOME/bin" state=present

- name: Update the system with Oracle JDK location
  command: "{{ item }}"
  with_items:
    - update-alternatives --install "/usr/bin/java" "java" "/usr/local/java/jdk/bin/java" 1
    - update-alternatives --install "/usr/bin/javac" "javac" "/usr/local/java/jdk/bin/javac" 1
    - update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/local/java/jdk/bin/javaws" 1
    - update-alternatives --install "/usr/bin/javah" "javah" "/usr/local/java/jdk/bin/javah" 1
    - update-alternatives --install "/usr/bin/jar" "jar" "/usr/local/java/jdk/bin/jar" 1

- name: Update the system that this is the default jdk
  command: "{{ item }}"
  with_items:
    - update-alternatives --set java /usr/local/java/jdk/bin/java
    - update-alternatives --set javac /usr/local/java/jdk/bin/javac
    - update-alternatives --set javaws /usr/local/java/jdk/bin/javaws
    - update-alternatives --set javah /usr/local/java/jdk/bin/javah
    - update-alternatives --set jar /usr/local/java/jdk/bin/jar

- name: Clean up
  file: state=absent path=/tmp/{{ jdk_download_filename }}
